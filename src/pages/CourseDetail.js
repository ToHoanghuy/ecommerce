import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { ArrowLeft, Star, Users, Clock, Heart, ShoppingCart, Award, BookOpen } from 'lucide-react';
import { useAppState, useAppDispatch } from '../context/AppContext';
import { coursesAPI } from '../services/api';
import './CourseDetail.css';

const CourseDetail = () => {
  const { id } = useParams();
  const navigate = useNavigate();
  const state = useAppState();
  const { dispatch, actionTypes } = useAppDispatch();
  
  const [course, setCourse] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  const isFavorite = course && state.favorites.includes(course.id);
  const isInCart = course && state.cart.includes(course.id);

  useEffect(() => {
    const fetchCourse = async () => {
      try {
        setLoading(true);
        setError(null);
        const courseData = await coursesAPI.getCourseById(parseInt(id));
        setCourse(courseData);
        
        // Add to view history
        dispatch({ type: actionTypes.ADD_TO_VIEW_HISTORY, payload: courseData.id });
      } catch (err) {
        setError('Kh√¥ng th·ªÉ t·∫£i th√¥ng tin kh√≥a h·ªçc. Vui l√≤ng th·ª≠ l·∫°i.');
        console.error('Error fetching course:', err);
      } finally {
        setLoading(false);
      }
    };

    if (id) {
      fetchCourse();
    }
  }, [id, dispatch, actionTypes]);

  const handleToggleFavorite = () => {
    if (isFavorite) {
      dispatch({ type: actionTypes.REMOVE_FROM_FAVORITES, payload: course.id });
    } else {
      dispatch({ type: actionTypes.ADD_TO_FAVORITES, payload: course.id });
    }
  };

  const handleAddToCart = () => {
    if (!isInCart) {
      dispatch({ type: actionTypes.ADD_TO_CART, payload: course.id });
    }
  };

  const formatPrice = (price) => {
    return new Intl.NumberFormat('vi-VN', {
      style: 'currency',
      currency: 'VND'
    }).format(price);
  };

  if (loading) {
    return (
      <div className="course-detail-page">
        <div className="container">
          <div className="loading-skeleton">
            <div className="skeleton-header"></div>
            <div className="skeleton-content"></div>
          </div>
        </div>
      </div>
    );
  }

  if (error || !course) {
    return (
      <div className="course-detail-page">
        <div className="container">
          <div className="error-state">
            <h2>‚ùå L·ªói</h2>
            <p>{error || 'Kh√¥ng t√¨m th·∫•y kh√≥a h·ªçc'}</p>
            <button onClick={() => navigate('/')} className="back-home-btn">
              <ArrowLeft /> V·ªÅ trang ch·ªß
            </button>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="course-detail-page">
      <div className="container">
        {/* Back Button */}
        <button onClick={() => navigate(-1)} className="back-btn">
          <ArrowLeft />
          Quay l·∫°i
        </button>

        {/* Course Header */}
        <div className="course-header">
          <div className="course-image-section">
            <img 
              src={course.image} 
              alt={course.name}
              className="course-main-image"
            />
            <div className="course-category-badge">{course.category}</div>
          </div>
          
          <div className="course-info-section">
            <h1 className="course-title">{course.name}</h1>
            <p className="course-description">{course.fullDescription}</p>
            
            <div className="course-instructor">
              <span>üë®‚Äçüè´ Gi·∫£ng vi√™n: <strong>{course.instructor}</strong></span>
            </div>

            <div className="course-stats-grid">
              <div className="stat-item">
                <Star className="stat-icon" />
                <div>
                  <span className="stat-value">{course.rating}</span>
                  <span className="stat-label">ƒê√°nh gi√°</span>
                </div>
              </div>
              <div className="stat-item">
                <Users className="stat-icon" />
                <div>
                  <span className="stat-value">{course.students.toLocaleString()}</span>
                  <span className="stat-label">H·ªçc vi√™n</span>
                </div>
              </div>
              <div className="stat-item">
                <Clock className="stat-icon" />
                <div>
                  <span className="stat-value">{course.duration}</span>
                  <span className="stat-label">Th·ªùi l∆∞·ª£ng</span>
                </div>
              </div>
              <div className="stat-item">
                <Award className="stat-icon" />
                <div>
                  <span className="stat-value">{course.level}</span>
                  <span className="stat-label">Tr√¨nh ƒë·ªô</span>
                </div>
              </div>
            </div>

            <div className="course-price-section">
              <span className="price-label">Gi√° kh√≥a h·ªçc:</span>
              <span className="price-value">{formatPrice(course.price)}</span>
            </div>
            
            <div className="course-actions">
              <button 
                className={`favorite-btn ${isFavorite ? 'favorited' : ''}`}
                onClick={handleToggleFavorite}
              >
                <Heart className="action-icon" />
                {isFavorite ? 'ƒê√£ y√™u th√≠ch' : 'Y√™u th√≠ch'}
              </button>
              
              <button 
                className={`cart-btn ${isInCart ? 'in-cart' : ''}`}
                onClick={handleAddToCart}
                disabled={isInCart}
              >
                <ShoppingCart className="action-icon" />
                {isInCart ? 'ƒê√£ th√™m v√†o gi·ªè' : 'Th√™m v√†o gi·ªè h√†ng'}
              </button>
            </div>
          </div>
        </div>

        {/* Course Content */}
        <div className="course-content">
          <div className="content-section">
            <h2>üìñ N·ªôi dung kh√≥a h·ªçc</h2>
            <div className="content-list">
              <div className="content-item">
                <BookOpen className="content-icon" />
                <div>
                  <h3>Ki·∫øn th·ª©c c∆° b·∫£n</h3>
                  <p>N·∫Øm v·ªØng c√°c kh√°i ni·ªám v√† nguy√™n l√Ω c∆° b·∫£n c·ªßa lƒ©nh v·ª±c</p>
                </div>
              </div>
              <div className="content-item">
                <BookOpen className="content-icon" />
                <div>
                  <h3>Th·ª±c h√†nh d·ª± √°n</h3>
                  <p>√Åp d·ª•ng ki·∫øn th·ª©c v√†o c√°c d·ª± √°n th·ª±c t·∫ø v·ªõi s·ª± h∆∞·ªõng d·∫´n chi ti·∫øt</p>
                </div>
              </div>
              <div className="content-item">
                <BookOpen className="content-icon" />
                <div>
                  <h3>Ch·ª©ng ch·ªâ ho√†n th√†nh</h3>
                  <p>Nh·∫≠n ch·ª©ng ch·ªâ ƒë∆∞·ª£c c√¥ng nh·∫≠n sau khi ho√†n th√†nh kh√≥a h·ªçc</p>
                </div>
              </div>
            </div>
          </div>

          <div className="content-section">
            <h2>üéØ ƒê·ªëi t∆∞·ª£ng h·ªçc vi√™n</h2>
            <ul className="target-list">
              <li>Ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu mu·ªën h·ªçc t·ª´ c∆° b·∫£n</li>
              <li>H·ªçc vi√™n c√≥ kinh nghi·ªám mu·ªën n√¢ng cao k·ªπ nƒÉng</li>
              <li>Ng∆∞·ªùi l√†m vi·ªác mu·ªën chuy·ªÉn ƒë·ªïi ng√†nh ngh·ªÅ</li>
              <li>Sinh vi√™n mu·ªën b·ªï sung ki·∫øn th·ª©c th·ª±c t·∫ø</li>
            </ul>
          </div>

          <div className="content-section">
            <h2>üí™ K·ªπ nƒÉng ƒë·∫°t ƒë∆∞·ª£c</h2>
            <div className="skills-grid">
              <span className="skill-tag">Ki·∫øn th·ª©c chuy√™n m√¥n</span>
              <span className="skill-tag">K·ªπ nƒÉng th·ª±c h√†nh</span>
              <span className="skill-tag">T∆∞ duy logic</span>
              <span className="skill-tag">Gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ</span>
              <span className="skill-tag">L√†m vi·ªác nh√≥m</span>
              <span className="skill-tag">Presentation</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default CourseDetail;
